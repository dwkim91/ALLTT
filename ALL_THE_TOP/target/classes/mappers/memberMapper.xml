<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="memberMapper">

	<select id="selectOneMemberByUsrId" parameterType="String" resultType="MemberDTO">
		SELECT
				*
		FROM
				MEMBER
		WHERE
				USER_ID = #{userId}
	</select>
	
	<insert id="insertMember" parameterType="MemberDTO">
		INSERT INTO
				MEMBER (USER_ID, NICK_NAME, SOCIAL_NM, IMG_DATA, IMG_EXTENSION)
		VALUES (
				#{userId}, #{nickName}, #{socialNm}, #{imgData}, #{imgExtension}
		)
	</insert>	
	
	<delete id="deleteMember" parameterType="long">
		DELETE FROM
				MEMBER
		WHERE
				MEMBER_ID = #{memberId}
	</delete>

	<select id="selectOneMemberByMemberId" parameterType="Long" resultType="MemberDTO">
		SELECT
				*
		FROM
				MEMBER
		WHERE
				MEMBER_ID = #{memberId}
	</select>
	
	<select id="selectOneMemberSimpleInfoByMemberId" parameterType="Long" resultType="MemberDTO">
		SELECT
				NICK_NAME, 
				IMG_DATA, 
				IMG_EXTENSION
		FROM
				MEMBER
		WHERE
				MEMBER_ID = #{memberId}
	</select>
	
	<insert id="insertWishContent" parameterType="FilteredDTO">
		INSERT INTO WISH_LIST (
				MEMBER_ID,
				CONTENT_ID
		)
		VALUES (
				#{memberId},
				#{contentId}
		)
	</insert>
	
	<delete id="deleteWishContent" parameterType="FilteredDTO">
		DELETE FROM
				WISH_LIST
		WHERE
				MEMBER_ID = #{memberId} 	AND
				CONTENT_ID = #{contentId}
	</delete>
	
	<select id="selectListNickName" parameterType="String" resultType="MemberDTO">
		SELECT
				*
		FROM
				MEMBER
		WHERE
				NICK_NAME = #{nickName}	
	</select>
	
	<update id="updateNickname" parameterType="MemberDTO">
		UPDATE
				MEMBER
		SET
				NICK_NAME = #{nickName}
		WHERE
				MEMBER_ID = #{memberId}
	</update>
	
	<update id="updateThumbnailImg" parameterType="MemberDTO">
		UPDATE
				MEMBER
		SET
				THUMBNAIL_IMG = #{thumbnailImg}
		WHERE
				MEMBER_ID = #{memberId}
	</update>
	
	<update id="updateProfileImg" parameterType="MemberDTO">
		UPDATE
				MEMBER
		SET
				IMG_DATA = #{imgData},
				IMG_EXTENSION = #{imgExtension}
		WHERE
				MEMBER_ID = #{memberId}
	</update>
	
	<select id="selectWishCntByMember" parameterType="Long" resultType="Integer">
		SELECT
				COUNT(*)
		FROM
				WISH_LIST
		WHERE
				MEMBER_ID = #{memberId}
	</select>
	
	<select id="selectNetflixWishCntByMemberId" parameterType="Long" resultType="Integer">
		SELECT
 				 COUNT(PLATFORM_ID) AS WISHLISTCOUNT
		FROM
				  CONTENT_LINK
		WHERE
				  PLATFORM_ID = 1 
				  AND CONTENT_ID IN (
			    						SELECT
			      								CONTENT_ID
									    FROM
									      		WISH_LIST
									    WHERE
									      		MEMBER_ID = #{memberId})
	</select>
	
	<select id="selectTvingWishCntByMemberId" parameterType="Long" resultType="Integer">
		SELECT
 				 COUNT(PLATFORM_ID) AS WISHLISTCOUNT
		FROM
				  CONTENT_LINK
		WHERE
				  PLATFORM_ID = 2 
				  AND CONTENT_ID IN (
			    						SELECT
			      								CONTENT_ID
									    FROM
									      		WISH_LIST
									    WHERE
									      		MEMBER_ID = #{memberId})
	</select>
	
	<select id="selectWavveWishCntByMemberId" parameterType="Long" resultType="Integer">
		SELECT
 				 COUNT(PLATFORM_ID) AS WISHLISTCOUNT
		FROM
				  CONTENT_LINK
		WHERE
				  PLATFORM_ID = 3 
				  AND CONTENT_ID IN (
			    						SELECT
			      								CONTENT_ID
									    FROM
									      		WISH_LIST
									    WHERE
									      		MEMBER_ID = #{memberId})
	</select>
	
	<delete id="deleteSubscriptionByMemberId" parameterType="Long">
		DELETE FROM
				SUBSCRIPTION
		WHERE
				MEMBER_ID = #{memberId}
	</delete>

	<insert id="insertSubscription" parameterType="MemberDTO">
		INSERT INTO SUBSCRIPTION (
				MEMBER_ID,
				PLATFORM_ID
		)
		VALUES (
				#{memberId},
				#{platformId}
		)
	</insert>

	<select id="selectListSubscription" resultType="Integer">
		SELECT
				PLATFORM_ID
		FROM 
				SUBSCRIPTION
		WHERE
				MEMBER_ID = #{memberId}
	</select>
	
	<select id="selectOneIsWishContent" parameterType="FilteredDTO" resultType="long">
		SELECT
				CONTENT_ID
		FROM
				WISH_LIST
		WHERE
				MEMBER_ID = #{memberId}		AND
				CONTENT_ID = #{contentId}
	</select>

	<select id="selectOneContentFilter" parameterType="FilterDTO" resultType="FilterDTO">
		SELECT
				*
		FROM
				SEARCH_FILTER
		WHERE
				MEMBER_ID = #{memberId} AND
				CONTENT_TYPE = #{contentType}
	</select>
	
	<insert id="insertContentFilter" parameterType="FilterDTO">
		INSERT INTO SEARCH_FILTER (
				MEMBER_ID,
				CONTENT_TYPE,
				NETFLIX_ID,
				TVING_ID,
				WAVVE_ID,
				GENRE_ID,
				WISH_INCLUDE_YN,
				SORT_TYPE
		)
		VALUES (
				#{memberId},
				#{contentType},
				#{netflixId},
				#{tvingId},
				#{wavveId},
				#{genreId},
				#{wishIncludeYn},
				#{sortType}
		)
	</insert>
	
	<update id="updateContentFilter" parameterType="FilterDTO">
		UPDATE SEARCH_FILTER
		SET
				CONTENT_TYPE = #{contentType},
				NETFLIX_ID = #{netflixId},
				TVING_ID = #{tvingId},
				WAVVE_ID = #{wavveId},
				GENRE_ID = #{genreId},
				WISH_INCLUDE_YN = #{wishIncludeYn},
				SORT_TYPE = #{sortType}
		WHERE
				MEMBER_ID = #{memberId}	AND
				CONTENT_TYPE = #{contentType}
	</update>
	
	<select id="selectListWishContentByFilterDTO" parameterType="FilterDTO" resultType="FilteredDTO">
		SELECT
				WL.MEMBER_ID,
			    WL.CONTENT_ID,
			    C.TITLE,
			    C.CONTENT_TYPE,
			    MIN(CV.IMG_URL) AS IMG_URL,
			    MAX(CL.URL) AS URL,
	            MAX(CL.PLATFORM_ID)
		FROM
				WISH_LIST WL
			JOIN CONTENT C 
				ON WL.CONTENT_ID = C.CONTENT_ID
		    JOIN CONTENT_LINK CL 
		    	ON WL.CONTENT_ID = CL.CONTENT_ID
		    JOIN CONTENT_VIEWIMG CV 
		    	ON C.CONTENT_ID = CV.CONTENT_ID
		WHERE
				MEMBER_ID = #{memberId}			
				<choose>
					<when test="contentType != 'all'">
					AND CONTENT_TYPE = #{contentType}
					</when>
					<otherwise>
					</otherwise>
				</choose>
		group by
				WL.CONTENT_ID
	</select>
	
	<select id="selectListWishContentByMemberInfo" parameterType="Map" resultType="FilteredDTO">
		SELECT
				C.CONTENT_ID,
		        WL.MEMBER_ID,
		        CL.PLATFORM_ID,
		        C.CONTENT_TYPE
		FROM
				WISH_LIST WL
			JOIN CONTENT_LINK CL ON WL.CONTENT_ID = CL.CONTENT_ID
		    JOIN CONTENT C ON WL.CONTENT_ID = C.CONTENT_ID
		GROUP BY
				C.CONTENT_ID,
		        MEMBER_ID,
		        CL.PLATFORM_ID
		HAVING
				WL.MEMBER_ID = #{memberId}
				<choose>
					<when test="contentType != 'all'">
					AND C.CONTENT_TYPE = #{contentType}
					</when>
					<otherwise>
					</otherwise>
				</choose>
	</select>
	
	<select id="selectOnePlatformCntByFilterDTO" parameterType="FilterDTO" resultType="int">
		SELECT
				COUNT(*)
		FROM
				WISH_LIST WL
			JOIN CONTENT_LINK CL ON WL.CONTENT_ID = CL.CONTENT_ID
			JOIN CONTENT C ON WL.CONTENT_ID = C.CONTENT_ID
		WHERE
				WL.MEMBER_ID = #{memberId} AND
				CL.PLATFORM_ID = #{platformId}
				<choose>
					<when test="contentType != 'all'">
						AND C.CONTENT_TYPE = #{contentType}
					</when>
					<otherwise>
					</otherwise>
				</choose>
	</select>
</mapper>