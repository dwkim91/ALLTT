<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
		
	<bean id="customAccessDenied" class="com.app.alltt.security.CustomAccessDeniedhandler"/>
	<bean id="authService" class="com.app.alltt.security.ALLTTUserDetailsService"/>

	<!-- spring security의 csrf 보호 기능 때문에 ajax가 막힘 -->
	<!-- 근본적으로, csrf 공격을 어디서 어떻게 할 수 있는지 확인 필요 -->
	<!-- 일단 확인이 다 끝나지 않았으므로 csrf disable -->
	<!-- 
		CSRF 공격을 방지하기 위해서는 CSRF 토큰을 사용하여 사용자의 요청이 유효한 것임을 확인하고, 이러한 공격을 방어할 수 있습니다.
		CSRF 토큰은 서버에서 생성되어 요청과 함께 전송되며, 요청 시마다 검증됩니다.
		이를 통해 공격자는 CSRF 토큰을 알지 못하면 공격을 실행할 수 없습니다.
	 -->
	
	<!-- 후보 2번, ajax 요청을 보낼 때, csrf 토큰을 심어서 보내기, ajax 에다가 코드 추가하면 댐 -->
	<!-- layout.jsp header META에다가 csrf 토큰 부여 추가 -->
	<!-- 모든 ajax에서 token 값 주고받기 -->
	<bean id="csrfTokenRepository" class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository">
		<property name="headerName" value="X-CSRF-TOKEN"/>
	</bean>
	
    <security:http pattern="/resources/bootstrap/**" security="none" />
    
	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/crawling/**" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/member/**/login" access="permitAll"/>
		<security:intercept-url pattern="/series" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
		<security:intercept-url pattern="/movie" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
		<security:intercept-url pattern="/community/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
		<security:intercept-url pattern="/member/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
		<security:intercept-url pattern="/support/inquiry" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
		<security:intercept-url pattern="/support/inquiryList/all" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/support/contentManagement" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/support/searchContent" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/support/contentDetail" access="hasRole('ROLE_ADMIN')"/>
		<security:form-login login-page="/login"/>
		<security:logout logout-url="/member/logout" invalidate-session="true"/>
		<security:access-denied-handler ref="customAccessDenied"/>
		
		<security:csrf token-repository-ref="csrfTokenRepository"/>
		
		<security:session-management>
			<security:concurrency-control max-sessions="1" error-if-maximum-exceeded="true"/>
		</security:session-management>
	</security:http>
	
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="authService"/>
	</security:authentication-manager>
	
</beans>